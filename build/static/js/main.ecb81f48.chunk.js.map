{"version":3,"sources":["Components/Notoken.jsx","Components/Message.jsx","Components/ThemeSelector.jsx","Components/themes.js","Components/Messages.jsx","Components/App.jsx","index.js"],"names":["NoToken","props","className","Message","message","title","body","Themeselector","state","CurrentTheme","colors","localStorage","getItem","setState","JSON","parse","this","changeTheme","map","c","onClick","style","backgroundColor","key","document","documentElement","setProperty","setItem","stringify","Component","themes","Messages","messages","getMessages","a","token","axios","get","headers","user_auth_token","response","data","error","console","log","length","m","Date","now","App","undefined","ReactDOM","render","StrictMode","getElementById"],"mappings":"+MAUeA,EARC,SAACC,GACb,OACI,qBAAKC,UAAY,WAAjB,SACI,8E,wBCSGC,EAXC,SAACF,GACb,IAAQG,EAAYH,EAAZG,QAER,OACI,sBAAKF,UAAY,UAAjB,UACI,6BAAKE,EAAQC,QACb,4BAAID,EAAQE,W,iBCPHC,E,kDACjB,aAAe,IAAD,8BACV,gBAMJC,MAAQ,CAACC,aAAc,EAAKR,MAAMS,OAAO,IALjCC,aAAaC,QAAQ,iBACrB,EAAKC,SAAS,CAACJ,aAAcK,KAAKC,MAAMJ,aAAaC,QAAQ,mBAHvD,E,0CASd,WAAU,IAAD,OACGF,EAAWM,KAAKf,MAAhBS,OAER,OADAM,KAAKC,YAAYD,KAAKR,MAAMC,cAExB,qBAAKP,UAAW,iBAAhB,SACKQ,EAAOQ,KAAI,SAAAC,GAAC,OAAI,qBAEGC,QAAW,WAAO,EAAKH,YAAYE,IACnCE,MAAO,CAACC,gBAAiBH,EAAE,yBAC3BjB,UAAciB,EAAC,OAAa,EAAKX,MAAMC,aAAX,KAAmC,wBAA0B,gBAHpFU,EAAC,a,yBAStC,SAAYA,GACR,IAAK,IAAII,KAAOJ,EACZK,SAASC,gBAAgBJ,MAAMK,YAAYH,EAAKJ,EAAEI,IACtDP,KAAKH,SAAS,CAACJ,aAAeU,IAC9BR,aAAagB,QAAQ,eAAgBb,KAAKc,UAAUT,Q,GA7BjBU,aCM5BC,EARA,CACX,CAAC,uBAAyB,UAAW,KAAQ,UAC7C,CAAC,uBAAyB,UAAW,KAAQ,UAC7C,CAAC,uBAAyB,UAAW,KAAQ,UAC7C,CAAC,uBAAyB,UAAW,KAAQ,UAC7C,CAAC,uBAAyB,UAAW,KAAQ,WCE5BC,E,4MACjBvB,MAAQ,CACJwB,SAAU,I,EAqBdC,Y,sBAAc,8BAAAC,EAAA,6DACFC,EAAU,EAAKlC,MAAfkC,MADE,SAEaC,IAAMC,IAAI,qCAAsC,CAACC,QAAS,CAACC,gBAAiBJ,KAFzF,YAEJK,EAFI,QAGGC,KAAKC,MAHR,yCAGsBC,QAAQC,IAAIJ,EAASC,KAAKC,QAHhD,OAIV,EAAK7B,SAAS,CAACmB,SAAWQ,EAASC,OAJzB,2C,uDAnBd,WACIzB,KAAKiB,gB,oBAET,WACI,OAAmC,IAA/BjB,KAAKR,MAAMwB,SAASa,OACZ,wDAIR,sBAAK3C,UAAY,mBAAjB,UACA,cAAC,EAAD,CAAeQ,OAAUoB,IACzB,sBAAK5B,UAAU,mBAAf,UACI,2CAAcc,KAAKR,MAAMwB,SAASa,OAAlC,eACC7B,KAAKR,MAAMwB,SAASd,KAAI,SAAA4B,GAAC,OAAI,cAAC,EAAD,CAAoC1C,QAAS0C,GAA/BA,EAAEzC,MAAQ0C,KAAKC,oB,GAjBrCnB,aCHjBoB,E,4MACjBzC,MAAQ,CACJ2B,WAAOe,G,uDAEX,WACIlC,KAAKH,SAAS,CAACsB,MAAOxB,aAAaC,QAAQ,uB,oBAI/C,WACI,OAAKI,KAAKR,MAAM2B,MAIZ,cAAC,EAAD,CAAUA,MAAOnB,KAAKR,MAAM2B,QAHpB,cAAC,EAAD,Q,GAXaN,aCGjCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,W","file":"static/js/main.ecb81f48.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst NoToken = (props) => {\n    return (\n        <div className = \"no-token\">\n            <h1>Please Log in to see and create messages!</h1>\n        </div>\n    )\n}\n\nexport default NoToken;\n","import React, { Component } from 'react'\n\n\nconst Message = (props) => {\n    const { message } = props\n\n    return ( \n        <div className = \"message\">\n            <h1>{message.title}</h1>\n            <p>{message.body}</p>\n        </div>\n    );\n}\n\nexport default Message;\n","import React, { Component } from 'react'\n\nexport default class Themeselector extends Component {\n    constructor() {\n        super()\n        if (localStorage.getItem(\"CurrentTheme\"))\n            this.setState({CurrentTheme: JSON.parse(localStorage.getItem(\"CurrentTheme\"))})\n    }\n\n\n    state = {CurrentTheme: this.props.colors[0]}\n\n    render() {\n        const { colors } = this.props;\n        this.changeTheme(this.state.CurrentTheme)\n        return (\n            <div className =\"theme-selector\">\n                {colors.map(c => <div \n                                    key={c[\"name\"]}\n                                    onClick = {() => {this.changeTheme(c)}}\n                                    style={{backgroundColor: c[\"--message-background\"]}}\n                                    className = {(c[\"name\"] === this.state.CurrentTheme[\"name\"]) ? \"color-option-selected\" : \"color-option\"}>\n                                    </div>)}\n            </div>\n        )\n    }\n    \n    changeTheme(c) {\n        for (let key in c)\n            document.documentElement.style.setProperty(key, c[key])\n        this.setState({CurrentTheme : c})\n        localStorage.setItem(\"CurrentTheme\", JSON.stringify(c))\n    }\n\n}\n\n\n\n","const themes = [\n    {\"--message-background\" : \"#ff2333\", \"name\": \"theme1\"},\n    {\"--message-background\" : \"#14BDEB\", \"name\": \"theme2\"},\n    {\"--message-background\" : \"#DCCDE8\", \"name\": \"theme3\"},\n    {\"--message-background\" : \"#56E39F\", \"name\": \"theme4\"},\n    {\"--message-background\" : \"#EF6F6C\", \"name\": \"theme5\"}\n]\n\nexport default themes ","import React, { Component } from 'react'\nimport Message from \"./Message\"\nimport axios from \"axios\"\nimport Themeselector from \"./ThemeSelector\"\nimport themes from \"./themes\"\n\n\nexport default class Messages extends Component {\n    state = {\n        messages: []\n    }\n    componentDidMount() {\n        this.getMessages()\n    }\n    render() {\n        if (this.state.messages.length === 0) {\n            return (<h1>No messages for today!</h1>)\n        }\n\n        return (\n            <div className = \"rendered-wrapper\">\n            <Themeselector colors = {themes}/>\n            <div className=\"messages-wrapper\">\n                <h3>You have {this.state.messages.length} Messages</h3>\n                {this.state.messages.map(m => <Message key={m.title + Date.now()} message={m}/>)}\n            </div>\n            </div>\n        )\n    }\n    \n    getMessages = async () => {\n        const { token } = this.props\n        const response = await axios.get(\"http://localhost:3001/api/messages\", {headers: {user_auth_token: token}})\n        if (response.data.error) return console.log(response.data.error)\n        this.setState({messages : response.data})\n    }\n\n}","import React, { Component } from 'react'\nimport NoToken from \"./Notoken\"\nimport Messages from \"./Messages\"\nimport Themeselector from \"./ThemeSelector\"\nexport default class App extends Component {\n    state = {\n        token: undefined\n    }\n    componentDidMount() {\n        this.setState({token: localStorage.getItem(\"user_auth_token\")})\n    }\n\n\n    render() {\n        if (!this.state.token) {\n            return (<NoToken />)\n        }\n        return (\n            <Messages token={this.state.token} />\n        )\n        \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./App.css\"\nimport App from \"./Components/App\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}